program -> stmt-sequence
stmt-sequence -> statement stmt-sequence'
stmt-sequence' -> ; stmt-sequence | &
statement -> if-stmt | repeat-stmt | assign-stmt | read-stmt | write-stmt
if-stmt -> if exp then stmt-sequence else stmt-sequence end
repeat-stmt -> repeat stmt-sequence until exp
assign-stmt -> identifier := exp
read-stmt -> read identifier
write-stmt -> write exp
exp -> simple-exp comparison-op simple-exp | simple-exp
comparison-op -> < | =
simple-exp -> term addop simple-exp | term
addop -> + | -
term -> factor mulop term | factor
mulop -> * | /
factor -> ( exp ) | number | identifier